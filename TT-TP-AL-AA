-- Anti-Lag and Anti-AFK LocalScript for Roblox
-- Place in StarterPlayerScripts

local RunService = game:GetService("RunService")
local UserGameSettings = UserSettings():GetService("UserGameSettings")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Function to optimize graphics settings (wrapped in pcall to avoid crashes)
local function optimizeGraphics()
	local success, err = pcall(function()
		-- Lower graphics quality to minimum
		UserGameSettings.SavedQualityLevel = Enum.SavedQualityLevel.QualityLevel1
		
		-- Disable expensive effects
		local lighting = game:GetService("Lighting")
		lighting.GlobalShadows = false
		lighting.FogEnd = 100000
		lighting.Brightness = 1
		lighting.Technology = Enum.Technology.Compatibility
		
		-- Disable particle effects, trails, beams, decals, and sounds
		for _, obj in pairs(workspace:GetDescendants()) do
			if obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Beam") then
				obj.Enabled = false
			elseif obj:IsA("Decal") then
				obj.Transparency = 1
			elseif obj:IsA("Sound") then
				obj.Volume = 0
			end
		end
	end)
	if not success then
		warn("optimizeGraphics failed: " .. err)
	end
end

-- Function to clean up unused objects (wrapped in pcall)
local function cleanupObjects()
	local success, err = pcall(function()
		for _, obj in pairs(workspace:GetDescendants()) do
			if obj:IsA("BasePart") and not obj.Anchored and obj.Parent then
				if obj.Position.Y < -500 or (obj.Position.Magnitude > 1000) then
					pcall(function() obj:Destroy() end) -- Avoid errors on server-owned objects
				end
			elseif obj:IsA("Attachment") or obj:IsA("Weld") then
				if not obj.Parent:IsA("Humanoid") then
					pcall(function() obj:Destroy() end)
				end
			end
		end
	end)
	if not success then
		warn("cleanupObjects failed: " .. err)
	end
end

-- Function to reduce network load (wrapped in pcall)
local function optimizeNetwork()
	local success, err = pcall(function()
		RunService.RenderStepped:Connect(function()
			for _, player in pairs(Players:GetPlayers()) do
				if player ~= LocalPlayer and player.Character then
					local distance = (LocalPlayer.Character and LocalPlayer.Character.PrimaryPart and player.Character.PrimaryPart and (LocalPlayer.Character.PrimaryPart.Position - player.Character.PrimaryPart.Position).Magnitude) or math.huge
					if distance > 30 then
						local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
						if humanoid then
							pcall(function() humanoid:ChangeState(Enum.HumanoidStateType.None) end)
						end
						for _, part in pairs(player.Character:GetChildren()) do
							if part:IsA("BasePart") then
								part.Transparency = 1
							end
						end
					end
				end
			end
		end)
	end)
	if not success then
		warn("optimizeNetwork failed: " .. err)
	end
end

-- Anti-AFK mechanism (jump every 5 seconds with state check)
local antiAFKConnection
local function startAntiAFK(humanoid)
	if antiAFKConnection then
		antiAFKConnection:Disconnect()
	end
	antiAFKConnection = task.spawn(function()
		while humanoid and humanoid.Parent do
			-- Check if humanoid can jump (not swimming, seated, etc.)
			local state = humanoid:GetState()
			if state == Enum.HumanoidStateType.Running or state == Enum.HumanoidStateType.RunningNoPhysics or state == Enum.HumanoidStateType.Landed then
				humanoid.Jump = true
				print("Jump triggered for anti-AFK") -- Debug output
			else
				-- Try to force a jumpable state
				pcall(function() humanoid:ChangeState(Enum.HumanoidStateType.Running) end)
				humanoid.Jump = true
				print("Attempted jump in state: " .. tostring(state)) -- Debug output
			end
			task.wait(5)
		end
		print("Anti-AFK loop stopped (humanoid destroyed)")
	end)
end

-- Main function to run optimizations and anti-AFK
local function initialize(character)
	local success, err = pcall(function()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart", 5)
		local humanoid = character:WaitForChild("Humanoid", 5)
		
		if not humanoidRootPart or not humanoid then
			warn("Failed to find HumanoidRootPart or Humanoid")
			return
		end
		
		-- Teleport to specified coordinates
		humanoidRootPart.CFrame = CFrame.new(Vector3.new(427.12786865234375, 131.3284149169922, 154.95379638671875))
		print("Teleported to specified coordinates")
		
		optimizeGraphics()
		optimizeNetwork()
		startAntiAFK(humanoid)
		
		-- Periodically clean up objects
		task.spawn(function()
			while true do
				cleanupObjects()
				task.wait(30)
			end
		end)
	end)
	if not success then
		warn("initialize failed: " .. err)
	end
end

-- Handle initial character and respawns
if LocalPlayer.Character then
	initialize(LocalPlayer.Character)
end
LocalPlayer.CharacterAdded:Connect(initialize)
